{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/common\";\n\nfunction TradeboxbuyComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵtext(2, \"Not enough money in wallet!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let TradeboxbuyComponent = /*#__PURE__*/(() => {\n  class TradeboxbuyComponent {\n    constructor(buyModalService) {\n      this.buyModalService = buyModalService;\n    }\n\n    inputbox(inputNumber) {\n      console.log(\"**inputNumber:\", inputNumber);\n      console.log(\"**inputNumber typeof:\", typeof inputNumber);\n      this.inputNumberBuy = Number(inputNumber);\n      console.log(\"**this.inputNumberBuy typeof:\", this.inputNumberBuy);\n      console.log(\"**this.inputNumberBuy typeof:\", typeof this.inputNumberBuy);\n      console.log(\"**this.DataBuyObj.currentPrice :\", this.DataBuyObj.currentPrice);\n      console.log(\"**this.DataBuyObj.currentPrice typeof:\", typeof this.DataBuyObj.currentPrice);\n      this.DataBuyObj.total = Number(this.inputNumberBuy) * Number(this.DataBuyObj.currentPrice);\n      this.mybalance = localStorage.getItem(\"balance\");\n      console.log(\"-->this.mybalance:\", this.mybalance);\n      console.log(\"-->this.mybalance typeof:\", typeof this.mybalance);\n      console.log(\"-->this.DataBuyObj.total:\", this.DataBuyObj.total);\n      console.log(\"-->this.DataBuyObj.total typeof:\", typeof this.DataBuyObj.total);\n\n      if (Number(this.mybalance) < Number(this.DataBuyObj.total)) {\n        this.warnbalanceFlag = true;\n        console.log(\"-->this.warnbalanceFlag:\", this.warnbalanceFlag);\n      } else {\n        this.warnbalanceFlag = false;\n        console.log(\"-->this.warnbalanceFlag:\", this.warnbalanceFlag);\n      }\n    }\n\n    buybtn() {\n      let keys = Object.keys(localStorage);\n      let keys_len = keys.length; //first time adding it & there is enough money\n\n      console.log(\"** before: this.warnbalanceFlag:\", this.warnbalanceFlag);\n      console.log(\"** before: this.DataBuyObj.ticker:\", this.DataBuyObj.ticker);\n      console.log(\"** before: keys.includes(this.DataBuyObj.ticker):\", keys.includes(this.DataBuyObj.ticker));\n\n      if (this.inputNumberBuy != 0) {\n        if (keys.includes(this.DataBuyObj.ticker) == false && this.warnbalanceFlag == false) {\n          console.log(\"** first if ...\");\n          let avgCostBought = Number(this.DataBuyObj.total) / Number(this.inputNumberBuy);\n          let newProfileitem = {\n            quantity: Number(this.inputNumberBuy),\n            totalcost: Number(this.DataBuyObj.total),\n            avgCost: avgCostBought,\n            name: this.DataBuyObj['name']\n          };\n          console.log(\"**buying newProfileitem:\", newProfileitem);\n          localStorage.setItem(this.DataBuyObj.ticker, JSON.stringify(newProfileitem));\n          let currentBalance = localStorage.getItem(\"balance\");\n          let currentBalanceNumber = Number(currentBalance);\n          localStorage.removeItem(\"balance\");\n          let newBalance = currentBalanceNumber - Number(this.DataBuyObj.total);\n          localStorage.setItem(\"balance\", String(newBalance));\n          console.log(\"balance:\", localStorage.getItem(\"balance\"));\n          this.boxnotificationFlag = true;\n          TradeboxbuyComponent.numberSharesBought = this.inputNumberBuy;\n          DetailsSectionComponent.myTradeboxbuyComponentShowMsgFlag = true;\n        } else if (keys.includes(this.DataBuyObj.ticker) == true && this.warnbalanceFlag == false) {\n          console.log(\"** else if ...\");\n          let currentBoughtItems = localStorage.getItem(this.DataBuyObj.ticker);\n          let parsedJson = JSON.parse(currentBoughtItems);\n          let current_quantity = Number(parsedJson[\"quantity\"]);\n          let current_totalcost = Number(parsedJson[\"totalcost\"]);\n          let newquantity = Number(this.inputNumberBuy) + current_quantity;\n          let newtotalCost = Number(this.DataBuyObj.total) + current_totalcost;\n          let newavgCost = newtotalCost / newquantity;\n          let modifiedProfileitem = {\n            quantity: newquantity,\n            totalcost: newtotalCost,\n            avgCost: newavgCost,\n            name: this.DataBuyObj['name']\n          };\n          localStorage.removeItem(this.DataBuyObj.ticker);\n          localStorage.setItem(this.DataBuyObj.ticker, JSON.stringify(modifiedProfileitem));\n          let currentBalance = localStorage.getItem(\"balance\");\n          let currentBalanceNumber = Number(currentBalance);\n          localStorage.removeItem(\"balance\");\n          let newBalance = currentBalanceNumber - Number(this.DataBuyObj.total);\n          localStorage.setItem(\"balance\", String(newBalance));\n          console.log(\"balance:\", localStorage.getItem(\"balance\"));\n          this.boxnotificationFlag = true;\n          TradeboxbuyComponent.numberSharesBought = this.inputNumberBuy;\n          details - section.myTradeboxbuyComponentShowMsgFlag;\n          true;\n        } else {\n          console.log(\"enetered Zero on input box\");\n        }\n      }\n\n      console.log(\"**after this.DataBuyObj.ticker:\", this.DataBuyObj.ticker);\n      console.log(\"**after localStorage.getItem():\", localStorage.getItem(this.DataBuyObj.ticker));\n      this.buyModalService.dismiss('Cross click');\n    }\n\n    ngOnInit() {\n      this.balance = localStorage.getItem(\"balance\");\n      this.balance = Number(Number(this.balance).toFixed(2));\n      console.log(\"----->ngOnInit() this.balance\", this.balance);\n    }\n\n  }\n\n  TradeboxbuyComponent.numberSharesBought = 0;\n\n  TradeboxbuyComponent.ɵfac = function TradeboxbuyComponent_Factory(t) {\n    return new (t || TradeboxbuyComponent)(i0.ɵɵdirectiveInject(i1.NgbActiveModal));\n  };\n\n  TradeboxbuyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TradeboxbuyComponent,\n    selectors: [[\"app-tradeboxbuy\"]],\n    inputs: {\n      DataBuyObj: \"DataBuyObj\"\n    },\n    decls: 20,\n    vars: 6,\n    consts: [[1, \"modal-header\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css\"], [1, \"modal-title\"], [\"type\", \"button\", \"id\", \"mybtn\", 1, \"btn\", \"btn-link\"], [1, \"bi\", \"bi-x\", 3, \"click\"], [1, \"modal-body\"], [\"type\", \"number\", \"id\", \"quantity\", \"name\", \"quantity\", \"min\", \"1\", 2, \"width\", \"7em\", 3, \"keyup\"], [\"quantity\", \"\"], [3, \"ngIf\"], [1, \"modal-footer\"], [1, \"mr-auto\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", 2, \"background-color\", \"green\", 3, \"disabled\", \"click\"], [2, \"color\", \"red\"]],\n    template: function TradeboxbuyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"link\", 1);\n        i0.ɵɵelementStart(2, \"h5\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 3)(5, \"span\", 4);\n        i0.ɵɵlistener(\"click\", function TradeboxbuyComponent_Template_span_click_5_listener() {\n          return ctx.buyModalService.dismiss(\"Cross click\");\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"p\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11, \" Quantity \\u00A0\");\n        i0.ɵɵelementStart(12, \"input\", 6, 7);\n        i0.ɵɵlistener(\"keyup\", function TradeboxbuyComponent_Template_input_keyup_12_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(13);\n\n          return ctx.inputbox(_r0.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, TradeboxbuyComponent_ng_template_14_Template, 3, 0, \"ng-template\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 9)(16, \"span\", 10);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function TradeboxbuyComponent_Template_button_click_18_listener() {\n          return ctx.buybtn();\n        });\n        i0.ɵɵtext(19, \"Buy\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.DataBuyObj[\"ticker\"]);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"Current Price \", ctx.DataBuyObj[\"currentPrice\"], \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Money in wallet: $ \", ctx.balance, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.warnbalanceFlag == true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Total: \", ctx.DataBuyObj[\"total\"], \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.warnbalanceFlag == true);\n      }\n    },\n    directives: [i2.NgIf],\n    styles: [\"\"]\n  });\n  return TradeboxbuyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}