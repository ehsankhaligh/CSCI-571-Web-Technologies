{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\nimport { Component } from '@angular/core';\nlet SearchSectionComponent = class SearchSectionComponent {\n  constructor(formBuilder, router, backendServiceReq) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.backendServiceReq = backendServiceReq;\n    this.filteredOptions = []; //populate from json\n\n    this.aboutcompany = [];\n    this.isLoading = false; //Add later if necessary\n  } //this.companySearchMatchForm = new FormGroup({\n  //   userSearchInput: new FormControl()\n  //});\n\n\n  ngOnInit() {\n    //console.log(\"got inside ngOnInit()\");\n    this.companySearchMatchForm = this.formBuilder.group({\n      userSearchInput: ''\n    }); //console.log(\"this.companySearchMatchForm:\" + this.companySearchMatchForm);\n\n    this.companySearchMatchForm.get('userSearchInput').valueChanges.pipe(debounceTime(100), tap(() => this.isLoading = true), switchMap(value => this.backendServiceReq.getSearchAutoComp(value).pipe(finalize(() => this.isLoading = false)))) //.subscribe(response => console.log(response)); //test\n    .subscribe(data => this.filteredOptions = data); //console.log(\"this.filteredOptions\" + this.filteredOptions);\n  }\n\n  onSubmit(symbolData) {\n    //console.log(\"0) this.validTickerFlag\", this.validTickerFlag);\n    //console.log(\"0) this.emptySearchInput\", this.emptySearchInput);\n    //console.log(\"0) symbolData.userSearchInput.symbol\", symbolData.userSearchInput.symbol);\n    //console.log(\"0) symbolData.userSearchInput\", symbolData.userSearchInput);\n    if (symbolData.userSearchInput.symbol) {\n      this.symbol = symbolData.userSearchInput.symbol; //console.log('if this.symbol:', this.symbol);\n    } else {\n      this.symbol = symbolData.userSearchInput; //console.log('else this.symbol:', this.symbol);\n    }\n\n    if (!this.symbol) {\n      //console.log(\"this.symbol undef\");\n      this.symbol = \"\"; //console.log('1) if .....');\n    } else {\n      //console.log('1) else .....');\n      if (this.symbol != \"\") {\n        //console.log('2) if .....');\n        this.backendServiceReq.getAboutTheCompany(this.symbol).subscribe(data => {\n          this.aboutcompany = data; //console.log(\"1) this.validTickerFlag\", this.validTickerFlag);\n          //console.log(\"1) Object.keys(this.aboutcompany).length\", Object.keys(this.aboutcompany).length);\n\n          if (Object.keys(this.aboutcompany).length != 0) {\n            //console.log('3) if .....');\n            this.validTickerFlag = false;\n            this.router.navigateByUrl('/details/' + this.symbol);\n          } else {\n            //console.log('4) else .....');\n            this.validTickerFlag = true; //console.log(\"1) here true\");\n          } //console.log(\"2) this.validTickerFlag\", this.validTickerFlag);\n\n        });\n      }\n    } //console.log('this.symbol:', this.symbol);\n    //console.log(\"3) this.validTickerFlag\", this.validTickerFlag);\n\n\n    if (this.symbol == \"\") {\n      this.emptySearchInput = true;\n    }\n    /*else if(this.validTickerFlag == false){\n    console.log(\"4) this.validTickerFlag\", this.validTickerFlag);\n    console.log(\"4) Entered Valid ticker\", this.validTickerFlag);\n    //this.router.navigateByUrl('/details/' + this.symbol);\n    }*/\n\n  }\n\n  dropdown(option) {\n    if (option) {\n      let result = option.symbol;\n      return result;\n    }\n  }\n\n  clearSearch(symbolData) {\n    //console.log(\"symbolData.userSearchInput.symbol:\" + symbolData.userSearchInput.symbol);\n    //console.log(\"symbolData.userSearchInput:\" + symbolData.userSearchInput);\n    //console.log(\"Object.keys(symbolData).length:\"+Object.keys(symbolData).length);\n    try {\n      this.emptySearchInput = false;\n      this.validTickerFlag = false;\n      this.clearflag = true;\n      console.log(\"try clearSearch\");\n      this.companySearchMatchForm.reset();\n    } catch (error) {\n      console.log(\"catch clearSearch\");\n      this.emptySearchInput = false;\n      this.validTickerFlag = false;\n      this.clearflag = true;\n    }\n  }\n\n  Search(symbolData) {\n    //console.log(\"symbolData.userSearchInput.symbol:\" + symbolData.userSearchInput.symbol);\n    //console.log(\"symbolData.userSearchInput:\" + symbolData.userSearchInput);\n    if (symbolData.userSearchInput == null) {\n      symbolData = {\n        \"userSearchInput\": \"\"\n      };\n    }\n\n    this.onSubmit(symbolData);\n  }\n\n};\nSearchSectionComponent = __decorate([Component({\n  selector: 'app-search-section',\n  templateUrl: './search-section.component.html',\n  styleUrls: ['./search-section.component.css']\n})], SearchSectionComponent);\nexport { SearchSectionComponent };","map":null,"metadata":{},"sourceType":"module"}