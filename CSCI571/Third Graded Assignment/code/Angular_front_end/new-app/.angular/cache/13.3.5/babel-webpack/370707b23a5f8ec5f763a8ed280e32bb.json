{"ast":null,"code":"import { TradeboxbuyComponent } from '../tradeboxbuy/tradeboxbuy.component';\nimport { TradeboxsellComponent } from '../tradeboxsell/tradeboxsell.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../backend.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction PortfolioSectionComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Currently you don't have any stock. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PortfolioSectionComponent_ng_template_18_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 7)(2, \"span\", 15);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 16);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 17)(7, \"div\", 18)(8, \"div\", 19)(9, \"p\", 20)(10, \"span\", 21);\n    i0.ɵɵtext(11, \"Quantity:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"span\", 22);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"div\", 19)(15, \"p\", 20)(16, \"span\", 21);\n    i0.ɵɵtext(17, \"Change:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"span\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(20, \"div\", 23);\n    i0.ɵɵelementStart(21, \"div\", 19)(22, \"p\", 20)(23, \"span\", 21);\n    i0.ɵɵtext(24, \"Avg. Cost/Share:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"span\", 22);\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(27, \"div\", 19)(28, \"p\", 20)(29, \"span\", 21);\n    i0.ɵɵtext(30, \"Current Price:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"span\");\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(33, \"div\", 23);\n    i0.ɵɵelementStart(34, \"div\", 19)(35, \"p\", 20)(36, \"span\", 21);\n    i0.ɵɵtext(37, \"Total Cost:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"span\", 22);\n    i0.ɵɵtext(39);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(40, \"div\", 19)(41, \"p\", 20)(42, \"span\", 21);\n    i0.ɵɵtext(43, \"Market Value:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"span\");\n    i0.ɵɵtext(45);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(46, \"div\", 24)(47, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function PortfolioSectionComponent_ng_template_18_div_0_Template_button_click_47_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return ctx_r4.popBuyShareBox(item_r3.symbol);\n    });\n    i0.ɵɵtext(48, \"Buy\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(49, \"span\");\n    i0.ɵɵtext(50, \"\\u00A0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(51, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function PortfolioSectionComponent_ng_template_18_div_0_Template_button_click_51_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.popSellShareBox(item_r3.symbol);\n    });\n    i0.ɵɵtext(52, \"Sell\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(53, \"br\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.symbol, \" \\u00A0\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.name, \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(item_r3.quantity);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleMapInterpolate1(\"float:right;color:\", item_r3.rightpriceColor, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r3.change);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(item_r3.avgCost);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleMapInterpolate1(\"float:right;color:\", item_r3.rightpriceColor, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r3.currentprice);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(item_r3.totalcost);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleMapInterpolate1(\"float:right;color:\", item_r3.marketValueColor, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r3.marketValue);\n  }\n}\n\nfunction PortfolioSectionComponent_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, PortfolioSectionComponent_ng_template_18_div_0_Template, 54, 17, \"div\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.holdingsListDisplay);\n  }\n}\n\nexport let PortfolioSectionComponent = /*#__PURE__*/(() => {\n  class PortfolioSectionComponent {\n    constructor(backendServiceReq, newsPopUpNgbModal, buyPopUpNgbModal, router) {\n      this.backendServiceReq = backendServiceReq;\n      this.newsPopUpNgbModal = newsPopUpNgbModal;\n      this.buyPopUpNgbModal = buyPopUpNgbModal;\n      this.router = router;\n      this.holdingsListDisplay = [];\n      this.holdingsListDisplayFlag = false;\n      this.stockPrice = []; //populate from json\n\n      this.aboutcompany = [];\n      this.buySell = [];\n      this.trackListTmp = [];\n    }\n\n    getAboutCompany(givenTicker) {\n      this.backendServiceReq.getAboutTheCompany(givenTicker).subscribe(data => {\n        this.aboutcompany = data;\n        console.log('getAboutCompany()' + Date());\n      });\n    }\n\n    popBuyShareBox(givenTicker) {\n      this.backendServiceReq.getAboutTheCompany(givenTicker).subscribe(data => {\n        this.aboutcompany = data;\n        const ngmodOpen = this.buyPopUpNgbModal.open(TradeboxbuyComponent);\n        this.buySell['ticker'] = this.aboutcompany['ticker'];\n        this.buySell['currentPrice'] = this.stockPrice[\"c\"];\n        this.buySell['name'] = this.aboutcompany[\"name\"];\n        console.log(\"getAboutCompany...\");\n        console.log(\"this.buySell['ticker']:\", this.buySell['ticker']);\n        console.log(\"this.buySell['currentPrice']:\", this.buySell['currentPrice']);\n        console.log(\"this.buySell['name']:\", this.buySell['name']);\n        ngmodOpen.componentInstance.DataBuyObj = this.buySell;\n      });\n    }\n\n    popSellShareBox(givenTicker) {\n      this.backendServiceReq.getAboutTheCompany(givenTicker).subscribe(data => {\n        this.aboutcompany = data;\n        const ngmodOpen = this.buyPopUpNgbModal.open(TradeboxsellComponent);\n        this.buySell['ticker'] = this.aboutcompany['ticker'];\n        this.buySell['currentPrice'] = this.stockPrice[\"c\"];\n        this.buySell['name'] = this.aboutcompany[\"name\"];\n        console.log(\">>popSellShareBox...\");\n        console.log(\">>this.buySell['ticker']:\", this.buySell['ticker']);\n        console.log(\">>this.buySell['currentPrice']:\", this.buySell['currentPrice']);\n        console.log(\">>this.buySell['name']:\", this.buySell['name']);\n        ngmodOpen.componentInstance.DataSellObj = this.buySell;\n      });\n    }\n\n    static populateBoxEntries() {\n      //how many stock holding\n      this.balance = localStorage.getItem(\"balance\");\n      this.balance = Number(Number(this.balance).toFixed(2));\n      let keys = Object.keys(localStorage);\n      let tmpList = keys;\n      let countStockHoldings = 0;\n      let changeValue;\n\n      for (let i = 0; i < tmpList.length; i += 1) {\n        console.log(\"**tmpList[i]:\", tmpList[i]);\n\n        if (tmpList[i] == 'items' || tmpList[i] == 'balance') {\n          console.log(\"items or balance found ...\");\n        } else {\n          countStockHoldings += 1;\n          let tmpVar = localStorage.getItem(tmpList[i]);\n          let parsedJson = JSON.parse(tmpVar);\n          console.log(\"parsedJson:\", parsedJson);\n\n          if (parsedJson.quantity > 0) {\n            this.backendServiceReq.getStockPriceInfo(tmpList[i]).subscribe(data => {\n              this.stockPrice = data;\n              console.log(\"*this.stockPrice:\", this.stockPrice);\n              console.log(\"*this.stockPrice.c:\", this.stockPrice[\"c\"]);\n              console.log(\"*this.stockPrice.d:\", this.stockPrice[\"d\"]);\n\n              if (this.stockPrice.length != 0) {\n                //round two Decimals\n                console.log(\"parsedJson.avgCost:\", Number(Number(parsedJson.avgCost).toFixed(2)));\n                console.log(\"parsedJson.avgCost:\", Number(this.stockPrice[\"c\"]));\n                let compare1 = Number(Number(parsedJson.avgCost).toFixed(2));\n                let compare2 = Number(this.stockPrice[\"c\"]);\n\n                if (compare1 > compare2) {\n                  changeValue = Number(Number(parsedJson.avgCost).toFixed(2)) - Number(this.stockPrice[\"c\"]);\n                } else {\n                  changeValue = Number(this.stockPrice[\"c\"]) - Number(Number(parsedJson.avgCost).toFixed(2));\n                }\n\n                if (changeValue == 0) {\n                  this.priceColor = \"black\";\n                } else if (changeValue < 0) {\n                  this.priceColor = \"red\";\n                } else {\n                  this.priceColor = \"green\";\n                }\n              }\n\n              let marketval = Number(parsedJson.quantity) * Number(this.stockPrice[\"c\"]);\n              marketval = Math.round(marketval * 100) / 100; //round\n\n              console.log(\"*parsedJson.totalcost:\", parsedJson.totalcost);\n              console.log(\"*marketval:\", marketval);\n\n              if (Number(marketval) == Number(parsedJson.totalcost.toFixed(2))) {\n                this.marketvalColor = \"black\";\n              } else if (Number(marketval) > Number(parsedJson.totalcost)) {\n                this.marketvalColor = \"green\";\n              } else {\n                this.marketvalColor = \"red\";\n              } //tmpVar: {\"quantity\":12,\"totalcost\":671.04,\"avgCost\":55.9}\n\n\n              this.holdingsListDisplay.push({\n                symbol: tmpList[i],\n                name: parsedJson.name,\n                quantity: parsedJson.quantity,\n                avgCost: parsedJson.avgCost.toFixed(2),\n                totalcost: parsedJson.totalcost.toFixed(2),\n                currentprice: this.stockPrice[\"c\"],\n                change: changeValue,\n                marketValue: marketval,\n                marketValueColor: this.marketvalColor,\n                rightpriceColor: this.priceColor\n              });\n            });\n            this.holdingsListDisplayFlag = true;\n          } else {\n            this.warnFlag = true;\n            countStockHoldings -= 1;\n          }\n        }\n      }\n\n      if (countStockHoldings > 0) {\n        this.warnFlag = false;\n      } else {\n        this.warnFlag = true;\n      }\n    }\n\n    ngOnInit() {\n      console.log(\"**localStorage.getItem(\\\"balance\\\")\", localStorage.getItem(\"balance\"));\n\n      if (localStorage.getItem(\"balance\") == null) {\n        localStorage.setItem(\"balance\", \"25000\");\n        console.log(\"**localStorage.getItem(\\\"balance\\\")\", localStorage.getItem(\"balance\"));\n        this.warnFlag = true;\n      } else {\n        this.warnFlag = false;\n      }\n\n      PortfolioSectionComponent.populateBoxEntries();\n    }\n\n  }\n\n  PortfolioSectionComponent.ɵfac = function PortfolioSectionComponent_Factory(t) {\n    return new (t || PortfolioSectionComponent)(i0.ɵɵdirectiveInject(i1.BackendService), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  PortfolioSectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PortfolioSectionComponent,\n    selectors: [[\"app-portfolio-section\"]],\n    decls: 23,\n    vars: 3,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"utf-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1\"], [\"id\", \"page-container\"], [\"id\", \"content-wrap\"], [\"id\", \"backgroundimage\"], [\"id\", \"marginStyle\", 1, \"card\"], [1, \"card-header\"], [2, \"font-size\", \"20px\"], [\"id\", \"marginStyle\", 3, \"ngIf\"], [\"id\", \"footer\", 2, \"background-color\", \"rgb(115, 147, 179)\"], [\"href\", \" https://finnhub.io\", \"target\", \"_blank\"], [\"id\", \"marginStyle\", \"role\", \"alert\", 1, \"alert\", \"alert-warning\"], [\"class\", \"card text-center\", \"id\", \"marginStyle\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"marginStyle\", 1, \"card\", \"text-center\"], [2, \"color\", \"black\", \"font-size\", \"20px\", \"float\", \"left\"], [2, \"color\", \"gray\", \"font-size\", \"10px\", \"float\", \"left\"], [1, \"card-body\"], [1, \"row\"], [1, \"col\", \"col-example\"], [1, \"card-text\"], [2, \"float\", \"left\"], [2, \"float\", \"right\"], [1, \"w-100\"], [1, \"card-footer\", \"text-muted\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\", 2, \"background-color\", \"blue\", \"float\", \"right\", 3, \"click\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", 2, \"background-color\", \"red\", \"float\", \"right\", 3, \"click\"]],\n    template: function PortfolioSectionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\")(2, \"title\");\n        i0.ɵɵtext(3, \"Bootstrap Example\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"meta\", 1)(5, \"meta\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"body\")(7, \"div\", 3)(8, \"div\", 4);\n        i0.ɵɵelement(9, \"div\", 5);\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"div\", 7)(12, \"span\", 8)(13, \"Strong\");\n        i0.ɵɵtext(14, \"My Portfolio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(17, PortfolioSectionComponent_ng_template_17_Template, 2, 0, \"ng-template\", 9);\n        i0.ɵɵtemplate(18, PortfolioSectionComponent_ng_template_18_Template, 1, 1, \"ng-template\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"footer\", 10);\n        i0.ɵɵtext(20, \"Powered by \");\n        i0.ɵɵelementStart(21, \"a\", 11);\n        i0.ɵɵtext(22, \"Finnhub.io\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(16);\n        i0.ɵɵtextInterpolate1(\" Money in wallet: $ \", ctx.balance, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.warnFlag == true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.holdingsListDisplayFlag == true);\n      }\n    },\n    directives: [i4.NgIf, i4.NgForOf],\n    styles: [\"#backgroundimage[_ngcontent-%COMP%]{background:url(background-graph.jpg);margin-top:auto;margin-left:auto;width:100%;height:100%;background-repeat:repeat-y;display:block;position:absolute;background-position:center;background-size:cover}#page-container[_ngcontent-%COMP%]{position:relative;min-height:100vh}#content-wrap[_ngcontent-%COMP%]{padding-bottom:2.5rem}#footer[_ngcontent-%COMP%]{position:absolute;bottom:0;text-align:center;width:100%;height:2.5rem}#marginStyle[_ngcontent-%COMP%]{margin-left:15%;margin-right:15%}\"]\n  });\n  return PortfolioSectionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}