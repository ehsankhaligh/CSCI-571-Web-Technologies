{"ast":null,"code":"import { DetailsSectionComponent } from '../details-section/details-section.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/common\";\n\nfunction TradeboxsellComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵtext(2, \"You cannot sell the stocks you don't have!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let TradeboxsellComponent = /*#__PURE__*/(() => {\n  class TradeboxsellComponent {\n    constructor(sellModalService) {\n      this.sellModalService = sellModalService;\n    }\n\n    inputbox(inputNumber) {\n      console.log(\"**inputNumber:\", inputNumber);\n      this.inputNumberSell = Number(inputNumber);\n      this.DataSellObj.total = inputNumber * this.DataSellObj.currentPrice;\n      this.DataSellObj.total = Math.round(this.DataSellObj.total * 100) / 100; //round\n\n      let keys = Object.keys(localStorage);\n      console.log(\"**keys:\", keys); //does not own any stock\n\n      console.log(\"**>this.DataSellObj.ticker:\", this.DataSellObj.ticker);\n\n      if (keys.includes(this.DataSellObj.ticker) == false) {\n        this.warnbalanceFlagSell = true;\n        console.log(\"**if ...\");\n      } else {\n        console.log(\"**else ...\");\n        let boughtItemNumber = localStorage.getItem(this.DataSellObj.ticker);\n        let parsedJson = JSON.parse(boughtItemNumber);\n        let bought_quantity = Number(parsedJson[\"quantity\"]);\n        console.log(\"boughtItemNumber:\", boughtItemNumber);\n        console.log(\"parsedJson:\", parsedJson);\n        console.log(\"bought_quantity:\", bought_quantity);\n        console.log(\"inputNumber:\", inputNumber);\n\n        if (bought_quantity < inputNumber) {\n          console.log(\"bought_quantity < inputNumber\");\n          this.warnbalanceFlagSell = true;\n        } else {\n          this.warnbalanceFlagSell = false;\n          console.log(\"no warn...\");\n        }\n      }\n    }\n\n    sellbtn() {\n      if (this.warnbalanceFlagSell == false) {\n        let currentBoughtItems = localStorage.getItem(this.DataSellObj.ticker);\n        let parsedJson = JSON.parse(currentBoughtItems);\n        let current_quantity = Number(parsedJson[\"quantity\"]);\n        let current_totalcost = Number(parsedJson[\"totalcost\"]);\n        let current_average = Number(parsedJson[\"avgCost\"]);\n        let sellQuant = Number(this.inputNumberSell);\n        let newQuant = current_quantity - sellQuant;\n        let totalsales = sellQuant * Number(this.DataSellObj['currentPrice']);\n        let newtotalcost = current_totalcost - totalsales;\n        let newaverage = newtotalcost / newQuant;\n        newtotalcost = Math.round(newtotalcost * 100) / 100; //round\n\n        newaverage = Math.round(newaverage * 100) / 100; //round\n\n        let modifiedProfileitem = {\n          quantity: newQuant,\n          totalcost: newtotalcost,\n          avgCost: newaverage,\n          name: this.DataSellObj['name']\n        };\n        localStorage.removeItem(this.DataSellObj.ticker);\n        localStorage.setItem(this.DataSellObj.ticker, JSON.stringify(modifiedProfileitem));\n        let currentBalance = localStorage.getItem(\"balance\");\n        let currentBalanceNumber = Number(currentBalance);\n        localStorage.removeItem(\"balance\");\n        let newBalance = currentBalanceNumber + Number(this.DataSellObj.total);\n        localStorage.setItem(\"balance\", String(newBalance));\n        console.log(\"balance:\", localStorage.getItem(\"balance\"));\n        this.sellModalService.dismiss('Cross click');\n        DetailsSectionComponent.sellhideflag = true;\n\n        if (PortfolioSectionComponent.reloadflag == true) {\n          PortfolioSectionComponent.reloadflag = false;\n          window.location.reload();\n        }\n      }\n    }\n\n    ngOnInit() {\n      this.balanceSell = localStorage.getItem(\"balance\");\n      this.balanceSell = Number(Number(this.balanceSell).toFixed(2));\n    }\n\n  }\n\n  TradeboxsellComponent.ɵfac = function TradeboxsellComponent_Factory(t) {\n    return new (t || TradeboxsellComponent)(i0.ɵɵdirectiveInject(i1.NgbActiveModal));\n  };\n\n  TradeboxsellComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TradeboxsellComponent,\n    selectors: [[\"app-tradeboxsell\"]],\n    inputs: {\n      DataSellObj: \"DataSellObj\"\n    },\n    decls: 20,\n    vars: 6,\n    consts: [[1, \"modal-header\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css\"], [1, \"modal-title\"], [\"type\", \"button\", \"id\", \"mybtn\", 1, \"btn\", \"btn-link\"], [1, \"bi\", \"bi-x\", 3, \"click\"], [1, \"modal-body\"], [\"type\", \"number\", \"id\", \"quantity\", \"min\", \"1\", 2, \"width\", \"7em\", 3, \"keyup\"], [\"quantity\", \"\"], [3, \"ngIf\"], [1, \"modal-footer\"], [1, \"mr-auto\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", 2, \"background-color\", \"green\", 3, \"disabled\", \"click\"], [2, \"color\", \"red\"]],\n    template: function TradeboxsellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"link\", 1);\n        i0.ɵɵelementStart(2, \"h5\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 3)(5, \"span\", 4);\n        i0.ɵɵlistener(\"click\", function TradeboxsellComponent_Template_span_click_5_listener() {\n          return ctx.sellModalService.dismiss(\"Cross click\");\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"p\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11, \" Quantity \\u00A0\");\n        i0.ɵɵelementStart(12, \"input\", 6, 7);\n        i0.ɵɵlistener(\"keyup\", function TradeboxsellComponent_Template_input_keyup_12_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(13);\n\n          return ctx.inputbox(_r0.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, TradeboxsellComponent_ng_template_14_Template, 3, 0, \"ng-template\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 9)(16, \"span\", 10);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function TradeboxsellComponent_Template_button_click_18_listener() {\n          return ctx.sellbtn();\n        });\n        i0.ɵɵtext(19, \"Sell\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.DataSellObj[\"ticker\"]);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"Current Price \", ctx.DataSellObj[\"currentPrice\"], \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Money in wallet: $ \", ctx.balanceSell, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.warnbalanceFlagSell == true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Total: \", ctx.DataSellObj[\"total\"], \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.warnbalanceFlagSell == true);\n      }\n    },\n    directives: [i2.NgIf],\n    styles: [\"\"]\n  });\n  return TradeboxsellComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}